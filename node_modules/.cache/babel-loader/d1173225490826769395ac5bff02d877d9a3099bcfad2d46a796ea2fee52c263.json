{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/DUY IT/reactjsFMnew/src/shared/components/Table/Table.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport CheckBox from \"shared/components/checkbox/CheckBox\";\nimport Dropdown from '../dropdown/Dropdown';\nimport InputSeach from '../inputseach/InputSeach';\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table(props) {\n  _s();\n  const {\n    Colums,\n    DataRow,\n    isboder,\n    ischeckbox,\n    onChangeCheck,\n    WrapperStyle\n  } = props;\n  const [Values, setValues] = useState([]);\n  const [check, setCheck] = useState(false);\n  const onChangeCheckbox = (e, value, isall) => {\n    let result = [];\n    if (!isall) {\n      if (e.target.checked) {\n        if (!Values.includes(value)) {\n          Values.push(value);\n          result = Values;\n        }\n      } else {\n        result = Values.filter(item => {\n          return value !== item;\n        });\n      }\n    } else {\n      if (e.target.checked) {\n        (DataRow || []).map((item, index) => {\n          if (!Values.includes(item.id)) {\n            result.push(item.id);\n          }\n        });\n      } else {\n        result = [];\n      }\n    }\n    setValues(result);\n    setCheck(!check);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Table `,\n    id: \"table\",\n    style: {\n      ...WrapperStyle\n    },\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table_standard\",\n      cellPadding: 0,\n      cellSpacing: 0,\n      border: isboder ? 1 : 0,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"color_standar\",\n          children: Colums && Colums.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                ...item.style\n              },\n              children: [ischeckbox && index <= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(CheckBox, {\n                  id: \"all_check\",\n                  value: \"all_check\",\n                  style: {\n                    marginRight: \"10px\",\n                    width: \"20px\",\n                    height: \"20px\"\n                  },\n                  onChange: e => onChangeCheckbox(e, \"all_check\", true),\n                  checked: Values.length === DataRow.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 37\n                }, this), item.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 62\n              }, this), !ischeckbox || index > 0 && item.title]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: DataRow && DataRow.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: Values.includes(item.id) ? \"#FBFAF4\" : \"#FFFFFF\"\n            },\n            children: Colums && Colums.map((el, i) => {\n              // if (item[el.dataIndex]) {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  ...el.style\n                },\n                children: [ischeckbox && i <= 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: \"flex\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CheckBox, {\n                    id: item.id,\n                    value: item.key,\n                    style: {\n                      marginRight: \"10px\",\n                      width: \"20px\",\n                      height: \"20px\"\n                    },\n                    onChange: e => onChangeCheckbox(e, item.id, false),\n                    checked: Values.includes(item.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 41\n                  }, this), !el.render && item[el.dataIndex], el.render && el.render(item[el.dataIndex], item)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 62\n                }, this), (!ischeckbox || i > 0) && !el.render && item[el.dataIndex], (!ischeckbox || i > 0) && el.render && el.render(item[el.dataIndex], item, index)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 40\n              }, this);\n              // }\n            })\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Table, \"iW6eos8CT9cSMDuGtqlaTodakuw=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","useEffect","useRef","CheckBox","Dropdown","InputSeach","jsxDEV","_jsxDEV","Table","props","_s","Colums","DataRow","isboder","ischeckbox","onChangeCheck","WrapperStyle","Values","setValues","check","setCheck","onChangeCheckbox","e","value","isall","result","target","checked","includes","push","filter","item","map","index","id","className","style","children","cellPadding","cellSpacing","border","display","marginRight","width","height","onChange","length","fileName","_jsxFileName","lineNumber","columnNumber","title","backgroundColor","el","i","key","render","dataIndex","_c","$RefreshReg$"],"sources":["/Users/user/Documents/DUY IT/reactjsFMnew/src/shared/components/Table/Table.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport CheckBox from \"shared/components/checkbox/CheckBox\"\nimport Dropdown from '../dropdown/Dropdown';\nimport InputSeach from '../inputseach/InputSeach';\n\nimport \"./style.scss\"\nfunction Table(props)\n{\n\n    const { Colums, DataRow, isboder, ischeckbox, onChangeCheck, WrapperStyle } = props\n    \n    const [Values, setValues] = useState([]);\n    const [check, setCheck] = useState(false);\n    \n\n    const onChangeCheckbox = (e, value, isall) =>\n    {\n\n        let result = [];\n        if (!isall) {\n\n            if (e.target.checked) {\n                if (!Values.includes(value)) {\n                    Values.push(value)\n                    result = Values\n                }\n\n\n\n\n            } else {\n                result = Values.filter(item =>\n                {\n\n                    return value !== item\n                })\n            }\n\n        } else {\n            if (e.target.checked) {\n                (DataRow || []).map((item, index) =>\n                {\n                    if (!Values.includes(item.id)) {\n                        result.push(item.id)\n                    }\n                })\n            } else {\n                result = []\n            }\n\n        }\n\n        setValues(result)\n        setCheck(!check)\n    }\n\n    return (\n        <div className={`Table `} id='table' style={{ ...WrapperStyle }}  >\n            <table className='table_standard'\n                cellPadding={0}\n                cellSpacing={0}\n                border={isboder ? 1 : 0}\n            >\n                <thead>\n                    <tr className='color_standar' >\n                        {Colums && Colums.map((item, index) =>\n                        {\n\n                            return <th key={index} style={{ ...item.style }}>\n                                {ischeckbox && index <= 0 && <div style={{ display: \"flex\" }}>\n\n                                    <CheckBox\n                                        id={\"all_check\"}\n                                        value={\"all_check\"}\n                                        style={{\n                                            marginRight: \"10px\", width: \"20px\",\n                                            height: \"20px\"\n                                        }}\n                                        onChange={(e) => onChangeCheckbox(e, \"all_check\", true)}\n                                        checked={Values.length === DataRow.length}\n                                    >\n\n\n                                    </CheckBox>\n                                    {/* <input type=\"checkbox\" id='' value={item.id} style={{ marginRight: \"10px\" }} onChange={(e) => onChangeCheckbox(e, item.id, true)} /> */}\n\n                                    {item.title}\n                                </div>}\n                                {!ischeckbox || index > 0 && item.title}\n                            </th>\n                        })}\n\n\n                    </tr>\n                </thead>\n                <tbody>\n\n                    {DataRow && DataRow.map((item, index) =>\n                    {\n\n\n\n                        return <tr key={index} style={{ backgroundColor: Values.includes(item.id) ? \"#FBFAF4\" : \"#FFFFFF\" }}>\n\n                            {Colums && Colums.map((el, i) =>\n                            {\n\n                                // if (item[el.dataIndex]) {\n                                return <td key={i} style={{ ...el.style }} >\n                                    {ischeckbox && i <= 0 && <div style={{ display: \"flex\" }}>\n                                        <CheckBox id={item.id} value={item.key}\n                                            style={{\n                                                marginRight: \"10px\",\n                                                width: \"20px\",\n                                                height: \"20px\"\n                                            }}\n                                            onChange={(e) => onChangeCheckbox(e, item.id, false)} checked={Values.includes(item.id)} >\n\n                                        </CheckBox>\n\n\n                                        {!el.render && item[el.dataIndex]}\n                                        {el.render && el.render(item[el.dataIndex], item)}\n                                    </div>}\n\n                                    {(!ischeckbox || i > 0) && !el.render && item[el.dataIndex]}\n                                    {(!ischeckbox || i > 0) && el.render && el.render(item[el.dataIndex], item, index)}\n                                </td>\n                                // }\n\n\n                            })}\n                        </tr>;\n                    })}\n\n                </tbody>\n            </table>\n        </div >\n    )\n}\n\n\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}