{"ast":null,"code":"import AppConfig from 'utils/AppConfig';\nconst BASE_URL = process.env.REACT_APP_API_URL;\nconst onRequest = config => {\n  config.headers.Authorization = `Bearer ${AppConfig.ACCESS_TOKEN}`;\n  return config;\n};\nconst onRequestError = error => {\n  Promise.reject(error);\n};\nconst onResponse = response => response;\nconst onResponseError = async error => {\n  if (error.response) {\n    // Access Token expired\n    if (error.response.status === 401 && error.response.data.message === 'jwt expired') {\n      try {} catch (_error) {\n        return Promise.reject(_error);\n      }\n    }\n  }\n  return Promise.reject(error);\n};\nexport const setupInterceptersTo = axiosInstance => {\n  axiosInstance.interceptors.request.use(onRequest, onRequestError);\n  axiosInstance.interceptors.response.use(onResponse, onResponseError);\n  return axiosInstance;\n};","map":{"version":3,"names":["AppConfig","BASE_URL","process","env","REACT_APP_API_URL","onRequest","config","headers","Authorization","ACCESS_TOKEN","onRequestError","error","Promise","reject","onResponse","response","onResponseError","status","data","message","_error","setupInterceptersTo","axiosInstance","interceptors","request","use"],"sources":["/Users/user/Documents/DUY IT/reactjsFMnew/src/adapter/AxiosConfig.js"],"sourcesContent":["import AppConfig from 'utils/AppConfig'\n\nconst BASE_URL = process.env.REACT_APP_API_URL\nconst onRequest = (config) => {\n    config.headers.Authorization = `Bearer ${AppConfig.ACCESS_TOKEN}`\n    return config\n}\n\nconst onRequestError = (error) => {\n    Promise.reject(error)\n}\n\nconst onResponse = (response) => response\n\nconst onResponseError = async (error) => {\n    if (error.response) {\n        // Access Token expired\n        if (\n            error.response.status === 401 &&\n            error.response.data.message === 'jwt expired'\n        ) {\n            try {\n                \n            } catch (_error) {\n                return Promise.reject(_error)\n            }\n        }\n    }\n    return Promise.reject(error)\n}\n\nexport const setupInterceptersTo = (axiosInstance) => {\n    axiosInstance.interceptors.request.use(onRequest, onRequestError)\n    axiosInstance.interceptors.response.use(onResponse, onResponseError)\n    return axiosInstance\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,iBAAiB;AAEvC,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC9C,MAAMC,SAAS,GAAIC,MAAM,IAAK;EAC1BA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAI,UAASR,SAAS,CAACS,YAAa,EAAC;EACjE,OAAOH,MAAM;AACjB,CAAC;AAED,MAAMI,cAAc,GAAIC,KAAK,IAAK;EAC9BC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AACzB,CAAC;AAED,MAAMG,UAAU,GAAIC,QAAQ,IAAKA,QAAQ;AAEzC,MAAMC,eAAe,GAAG,MAAOL,KAAK,IAAK;EACrC,IAAIA,KAAK,CAACI,QAAQ,EAAE;IAChB;IACA,IACIJ,KAAK,CAACI,QAAQ,CAACE,MAAM,KAAK,GAAG,IAC7BN,KAAK,CAACI,QAAQ,CAACG,IAAI,CAACC,OAAO,KAAK,aAAa,EAC/C;MACE,IAAI,CAEJ,CAAC,CAAC,OAAOC,MAAM,EAAE;QACb,OAAOR,OAAO,CAACC,MAAM,CAACO,MAAM,CAAC;MACjC;IACJ;EACJ;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC;AAED,OAAO,MAAMU,mBAAmB,GAAIC,aAAa,IAAK;EAClDA,aAAa,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAACpB,SAAS,EAAEK,cAAc,CAAC;EACjEY,aAAa,CAACC,YAAY,CAACR,QAAQ,CAACU,GAAG,CAACX,UAAU,EAAEE,eAAe,CAAC;EACpE,OAAOM,aAAa;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}